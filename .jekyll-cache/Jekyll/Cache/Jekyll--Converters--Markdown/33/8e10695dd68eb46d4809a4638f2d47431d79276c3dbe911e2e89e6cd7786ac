I"18<p><br /></p>

<h1 id="1-객체">1. 객체</h1>
<hr />

<p>자바스크립트의 7가지 데이터 타입은 <strong>원시 타입</strong>과 <strong>객체 타입</strong>으로 구분됨</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center"><strong>원시 타입</strong></th>
      <th style="text-align: center"><strong>객체 타입</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">변경 불가능한 값</td>
      <td style="text-align: center">변경 가능한 값</td>
    </tr>
    <tr>
      <td style="text-align: center">변수에 실제 값이 저장</td>
      <td style="text-align: center">변수에 참조 값이 저장</td>
    </tr>
    <tr>
      <td style="text-align: center">값에 의한 전달</td>
      <td style="text-align: center">참조에 의한 전달</td>
    </tr>
  </tbody>
</table>

<p class="notice--info"><strong>값에 의한 전달</strong><br />
변수를 다른 변수에 할당할 때 원본의 원시값이 복사되어 전달</p>

<p class="notice--info"><strong>참조에 의한 전달</strong><br />
변수를 다른 변수에 할당할 때 원본의 참조값이 복사되어 전달</p>

<p><br /></p>

<h1 id="2-객체-리터럴에-의한-객체-생성">2. 객체 리터럴에 의한 객체 생성</h1>
<hr />

<p>자바스크립트는 프로토타입 기반 객체 지향 언어</p>
<ol>
  <li><strong>객체 리터럴</strong></li>
  <li><code class="language-plaintext highlighter-rouge">Object</code> 생성자 함수</li>
  <li>생성자 함수</li>
  <li><code class="language-plaintext highlighter-rouge">Object.create</code> 메서드</li>
  <li>클래스</li>
</ol>

<h2>객체 리터럴</h2>
<p>중괄호(<code class="language-plaintext highlighter-rouge">{...}</code>) 내에 0개 이상의 프로퍼티를 정의 (코드블럭 x → 세미콜론 필요)</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">jongbin</span> <span class="o">=</span> <span class="p">{</span>
  <span class="nx">age</span> <span class="o">=</span> <span class="mi">26</span><span class="p">,</span>
  <span class="nx">location</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">suwon</span><span class="dl">"</span><span class="p">,</span>
  <span class="c1">// 여러개의 프로퍼티 정의</span>
<span class="p">};</span>
</code></pre></div></div>

<p><br /></p>

<h1 id="3-프로퍼티">3. 프로퍼티</h1>
<hr />

<p>키(key)와 값(value)로 구성됨</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">jongbin</span> <span class="o">=</span> <span class="p">{</span>
  <span class="nx">age</span> <span class="o">=</span> <span class="mi">26</span><span class="p">,</span>
  <span class="c1">// age는 키, 26은 값</span>
<span class="p">};</span>
</code></pre></div></div>
<p><br /></p>

<table>
  <tbody>
    <tr>
      <td>&lt; 프로퍼티 키, 값으로 사용할 수 있는 값 &gt;</td>
      <td> </td>
    </tr>
    <tr>
      <td><strong>키(key)</strong></td>
      <td>빈 문자열을 포함하는 모든 문자열 또는 심벌 값</td>
    </tr>
    <tr>
      <td><strong>값(value)</strong></td>
      <td>자바스크립트에서 사용할 수 있는 모든 값</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>프로퍼티 키는 식별자 네이밍 규칙(카멜케이스)을 따르지 않는 이름에는 반드시 따옴표 사용</li>
  <li>프로퍼티 키로 예약어를 사용하는 것도 가능(권장 x)</li>
  <li>중복 선언하면 에러 대신 덮어씀</li>
</ul>

<h2>객체의 프로퍼티를 동적으로 생성</h2>
<p>프로퍼티 키를 대괄호(<code class="language-plaintext highlighter-rouge">[...]</code>)로 묶음</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">jongbin</span><span class="p">[</span><span class="nx">shoes</span><span class="p">]</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">nike</span><span class="dl">"</span><span class="p">;</span>
</code></pre></div></div>

<p><br /></p>

<h1 id="4-프로퍼티-접근">4. 프로퍼티 접근</h1>
<hr />

<p><u>객체에 존재하지 않는 프로퍼티에 접근하면 `undefined`를 반환</u>
<br />
<br /></p>

<p>&lt; 프로퍼티에 접근하는 방법 &gt;</p>
<ul>
  <li>마침표 프로퍼티 접근 연산자(<code class="language-plaintext highlighter-rouge">.</code>)를 사용하는 <strong>마침표 표기법</strong></li>
  <li>대괄호 프로퍼티 접근 연산자(<code class="language-plaintext highlighter-rouge">[...]</code>)를 사용하는 <strong>대괄호 표기법</strong></li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">jongbin</span> <span class="o">=</span> <span class="p">{</span>
  <span class="nx">age</span> <span class="o">=</span> <span class="mi">26</span>
<span class="p">};</span>

<span class="c1">// 마침표 표기법</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">jongbin</span><span class="p">.</span><span class="nx">age</span><span class="p">);</span>

<span class="c1">// 대괄호 표기법</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">jongbin</span><span class="p">[</span><span class="dl">"</span><span class="s2">age</span><span class="dl">"</span><span class="p">])</span>
</code></pre></div></div>
<p><br /></p>
<ul>
  <li>대괄호 표기법을 사용할 때 키 값을 따옴표로 감싸야 함</li>
  <li>키값이 네이밍 규칙을 준수하지 않았다면 <strong>대괄호 표기법</strong>을 이용해야 함</li>
</ul>

<p><br /></p>

<h1 id="5-프로퍼티-갱신-접근-삭제">5. 프로퍼티 갱신, 접근, 삭제</h1>
<hr />

<h2>갱신</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">jongbin</span> <span class="o">=</span> <span class="p">{</span>
  <span class="nx">age</span> <span class="o">=</span> <span class="mi">26</span>
<span class="p">};</span>

<span class="nx">jongbin</span><span class="p">.</span><span class="nx">age</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>
</code></pre></div></div>
<p>존재하는 프로퍼티에 값을 할당하면 갱신됨.</p>

<h2>생성</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">jongbin</span> <span class="o">=</span> <span class="p">{</span>
  <span class="nx">age</span> <span class="o">=</span> <span class="mi">26</span>
<span class="p">};</span>

<span class="nx">jongbin</span><span class="p">.</span><span class="nx">shoes</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">nike</span><span class="dl">"</span><span class="p">;</span>
</code></pre></div></div>
<p>존재하지 않는 프로퍼티에 값을 할당하면 동적으로 프로퍼티가 생성됨.</p>

<h2>삭제</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">jongbin</span> <span class="o">=</span> <span class="p">{</span>
  <span class="nx">age</span> <span class="o">=</span> <span class="mi">26</span>
<span class="p">};</span>

<span class="k">delete</span> <span class="nx">jongbin</span><span class="p">.</span><span class="nx">age</span><span class="p">;</span>
</code></pre></div></div>
<p><code class="language-plaintext highlighter-rouge">delete</code> 연산자를 사용하여 프로퍼티값을 삭제함(존재하지 않는 프로퍼티의 경우 무시)</p>

<p><br /></p>

<h1 id="6-es6의-객체-리터럴">6. ES6의 객체 리터럴</h1>

<h2>축약 표현</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">y</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>

<span class="c1">// 기존</span>
<span class="kd">const</span> <span class="nx">jongbin</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">x</span><span class="p">:</span> <span class="nx">x</span><span class="p">,</span>
  <span class="na">y</span><span class="p">:</span> <span class="nx">y</span>
<span class="p">}</span>

<span class="c1">// ES6</span>
<span class="kd">const</span> <span class="nx">jongbin</span> <span class="o">=</span> <span class="p">{</span>
  <span class="nx">x</span><span class="p">,</span>
  <span class="nx">y</span>
<span class="p">}</span>
</code></pre></div></div>
<p>ES6에서는 변수 이름과 프로퍼티 키가 동일한 경우 <strong>프로퍼티 키를 생략</strong>할 수 있다.</p>

<p><br /></p>

<h2>여러개 프로퍼티 동적 생성</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">something</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">shoes</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">jongbin</span> <span class="o">=</span> <span class="p">{};</span>

<span class="c1">// 기존</span>
<span class="nx">jongbin</span><span class="p">[</span><span class="nx">something</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">-</span><span class="dl">'</span> <span class="o">+</span> <span class="o">++</span><span class="nx">i</span><span class="p">]</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">nike</span><span class="dl">"</span>
<span class="nx">jongbin</span><span class="p">[</span><span class="nx">something</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">-</span><span class="dl">'</span> <span class="o">+</span> <span class="o">++</span><span class="nx">i</span><span class="p">]</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">hoka</span><span class="dl">"</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">jongbin</span><span class="p">)</span>  <span class="c1">// {shoes-1: "nike, shoes-2: "hoka"}</span>

<span class="c1">// ES6</span>
<span class="nx">jongbin</span> <span class="o">=</span> <span class="p">{</span>
  <span class="p">[</span><span class="s2">`</span><span class="p">${</span><span class="nx">something</span><span class="p">}</span><span class="s2">-</span><span class="p">${</span><span class="o">++</span><span class="nx">i</span><span class="p">}</span><span class="s2">`</span><span class="p">]</span> <span class="p">:</span> <span class="dl">"</span><span class="s2">nike2</span><span class="dl">"</span>
  <span class="p">[</span><span class="s2">`</span><span class="p">${</span><span class="nx">something</span><span class="p">}</span><span class="s2">-</span><span class="p">${</span><span class="o">++</span><span class="nx">i</span><span class="p">}</span><span class="s2">`</span><span class="p">]</span> <span class="p">:</span> <span class="dl">"</span><span class="s2">hoka2</span><span class="dl">"</span>
<span class="p">}</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">jongbin</span><span class="p">)</span>  <span class="c1">// {shoes-1: "nike2, shoes-2: "hoka2"}</span>
</code></pre></div></div>
<p>ES6는 객체리터럴 내부에서도 사용 가능</p>

<p><br /></p>

<h2>메서드 축약 표현</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 기존</span>
<span class="kd">const</span> <span class="nx">jongbin</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">age</span><span class="p">:</span> <span class="mi">26</span><span class="p">,</span>
  <span class="na">myOld</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">I'm </span><span class="dl">"</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">age</span><span class="p">.</span><span class="nx">toString</span><span class="p">())</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// ES6</span>
<span class="kd">const</span> <span class="nx">jongbin</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">age</span><span class="p">:</span> <span class="mi">26</span><span class="p">,</span>
  <span class="nx">myOld</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">I'm </span><span class="dl">"</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">age</span><span class="p">.</span><span class="nx">toString</span><span class="p">())</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<p><code class="language-plaintext highlighter-rouge">function</code> 키워드를 생략할 수 있음.</p>

<p><br />
<br /></p>

<p class="notice--info">이웅모 선생님의 모던 자바스크립트 Deep Dive를 공부하기 위해 정리한 글입니다.<br />
혹시나 보시다가 고칠 부분이나 마음에 안드시는 부분이 있다면 말씀해주시면 감사하겠습니다!</p>

:ET