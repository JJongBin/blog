I"Z*<p><br /></p>

<p><strong><u>피연산자</u></strong></p>
<ul>
  <li>연산자의 대상</li>
  <li>값으로 평가될 수 있는 표현식</li>
</ul>

<p><br /></p>

<h1 id="1-산술-연산자">1. 산술 연산자</h1>
<hr />

<ul>
  <li>피연산자를 대상으로 수학적 계산을 수행해 새로운 숫자 값을 만듬.</li>
  <li>산술 연산이 불가능한 경우 <code class="language-plaintext highlighter-rouge">NaN</code>을 반환</li>
</ul>

<p><br /></p>

<p><strong>* 이항 산술 연산자</strong></p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">이항 산술 연산자</th>
      <th style="text-align: center">의미</th>
      <th style="text-align: center">부수효과</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">+</td>
      <td style="text-align: center">덧셈</td>
      <td style="text-align: center">X</td>
    </tr>
    <tr>
      <td style="text-align: center">-</td>
      <td style="text-align: center">뺄셈</td>
      <td style="text-align: center">X</td>
    </tr>
    <tr>
      <td style="text-align: center">*</td>
      <td style="text-align: center">곱셈</td>
      <td style="text-align: center">X</td>
    </tr>
    <tr>
      <td style="text-align: center">/</td>
      <td style="text-align: center">나눗셈</td>
      <td style="text-align: center">X</td>
    </tr>
    <tr>
      <td style="text-align: center">%</td>
      <td style="text-align: center">나머지</td>
      <td style="text-align: center">X</td>
    </tr>
  </tbody>
</table>

<p><br /></p>

<p><strong>* 단항 산술 연산자</strong></p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">단항 산술 연산자</th>
      <th>의미</th>
      <th style="text-align: center">부수효과</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">++</td>
      <td>증가</td>
      <td style="text-align: center">O</td>
    </tr>
    <tr>
      <td style="text-align: center">–</td>
      <td>감소</td>
      <td style="text-align: center">O</td>
    </tr>
    <tr>
      <td style="text-align: center">+</td>
      <td>효과 X</td>
      <td style="text-align: center">X</td>
    </tr>
    <tr>
      <td style="text-align: center">-</td>
      <td>양수를 음수로, 음수를 양수로 반전한 값 반환</td>
      <td style="text-align: center">X</td>
    </tr>
  </tbody>
</table>

<p><br />
증가/감소 연산을 하면 피연산자의 값을 변경하는 암묵적 할당이 일어남.</p>

<p class="notice--info"><strong>증가/감소 연산자는 위치에 의미가 있다.</strong><br />
- 피연산자 앞에 위피한 전위 증가/감소 연산자는 먼저 피연산자의 값을 증가/감소시킨후 다른 연산을 수행.<br />
- 피연산자 뒤에 위피한 후위 증가/감소 연산자는 먼저 다른 연산을 수행한 후 피연산자의 값을 증가/감소.</p>

<p><br /></p>

<p><strong>* 문자열 연결 연산자</strong></p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">+ 연산자</code>는 피연산자 중 하나 이상이 문자열인 경우 문자열 연결 연산자로 동작한다.</li>
</ul>

<p><br /></p>

<h1 id="2-할당-연산자">2. 할당 연산자</h1>
<hr />

<p>할당 연산자는 우항에 있는 피연산자의 평가 결과를 좌항에 있는 변수에 할당한다.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">할당 연산자</th>
      <th style="text-align: center">예</th>
      <th style="text-align: center">동일 표현</th>
      <th style="text-align: center">부수효과</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">=</td>
      <td style="text-align: center">x=5</td>
      <td style="text-align: center">x=5</td>
      <td style="text-align: center">O</td>
    </tr>
    <tr>
      <td style="text-align: center">+=</td>
      <td style="text-align: center">x+=5</td>
      <td style="text-align: center">x=x+5</td>
      <td style="text-align: center">O</td>
    </tr>
    <tr>
      <td style="text-align: center">-=</td>
      <td style="text-align: center">x-=5</td>
      <td style="text-align: center">x=x-5</td>
      <td style="text-align: center">O</td>
    </tr>
    <tr>
      <td style="text-align: center">*=</td>
      <td style="text-align: center">x*=5</td>
      <td style="text-align: center">x=x*5</td>
      <td style="text-align: center">O</td>
    </tr>
    <tr>
      <td style="text-align: center">/=</td>
      <td style="text-align: center">x/=5</td>
      <td style="text-align: center">x=x/5</td>
      <td style="text-align: center">O</td>
    </tr>
    <tr>
      <td style="text-align: center">%/</td>
      <td style="text-align: center">x%=5</td>
      <td style="text-align: center">x=x%5</td>
      <td style="text-align: center">O</td>
    </tr>
  </tbody>
</table>

<p>부수효과 = 변수값이 변하는</p>

<p><br /></p>

<h2 id="템플릿-리터럴">템플릿 리터럴</h2>
<p>ES6부터 템플릿 리터럴이라는 새로운 문자열 표기법 도입.</p>
<ul>
  <li>백틱(``)을 사용해 멀티라인 문자열 가능</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">jongbin</span> <span class="o">=</span> <span class="s2">`hello
I'm jongbin`</span><span class="p">;</span>

<span class="c1">// 출력결과</span>
<span class="c1">// hello</span>
<span class="c1">// I'm jongbin</span>
</code></pre></div></div>

<p><br /></p>
<ul>
  <li>표현식 삽입 (<code class="language-plaintext highlighter-rouge">${}</code>를 사용해서 표현식을 삽입한다.)</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">jongbin</span> <span class="o">=</span> <span class="s2">`I',m </span><span class="p">${</span><span class="mi">20</span><span class="o">+</span><span class="mi">6</span><span class="p">}</span><span class="s2"> years old`</span><span class="p">;</span> 

<span class="c1">// 출력결과</span>
<span class="c1">// I'm 26 years old</span>
</code></pre></div></div>

<p><br /></p>

<h1 id="3-불리언-타입">3. 불리언 타입</h1>
<hr />

<p>불리언 타입은 <code class="language-plaintext highlighter-rouge">true</code>, <code class="language-plaintext highlighter-rouge">false</code>값 두가지가 있다.</p>

<p><br /></p>

<h1 id="4-undefined-타입">4. undefined 타입</h1>
<hr />

<p><code class="language-plaintext highlighter-rouge">undefined</code>은 값을 할당하지 않은 변수를 참조했을때 반환된다.</p>

<p>선언만 하고 값을 할당하지 않은 변수를을 <code class="language-plaintext highlighter-rouge">undefined</code>로 초기화한다.</p>

<p><br /></p>

<h1 id="5-null-타입">5. null 타입</h1>
<hr />

<p><code class="language-plaintext highlighter-rouge">null</code>은 변수에 값이 없음을 의도적으로 명시할 때 사용한다.</p>

<p>이전의 값의 참조를 명시적으로 제거할 때 사용</p>

<p><br /></p>

<h1 id="6-심벌-타입">6. 심벌 타입</h1>
<hr />

<ul>
  <li><strong>변경불가능</strong>한 원시타입의 값</li>
  <li>다른 값과 <strong>중복되지 않는</strong> 유일한 값</li>
</ul>

<p><br /></p>

<h1 id="7-객체-타입">7. 객체 타입</h1>
<hr />

<ul>
  <li>자바스크립트의 기본 타입은 객체(object).</li>
  <li>객체란 실생활에서 우리가 인식할 수 있는 사물로 볼 수 있다.</li>
  <li>객체는 여러 프로퍼티(property)나 메소드(method)를 같은 이름으로 묶어놓은 일종의 집합체.</li>
  <li>자바스크립트를 이루고 있는 거의 모든 것이 객체.</li>
</ul>

<p><br /></p>

<h1 id="데이터-타입의-필요성">데이터 타입의 필요성</h1>
<hr />

<ol>
  <li>메모리
    <ul>
      <li>메모리에 값을 저장하려면 공간을 확보해야함.</li>
      <li><strong>변수에 할당되는 값의 <u>데이터 타입</u>에 따라 확보해야 할 메모리 공간의 크기가 결정됨</strong>
<br />
<br /></li>
    </ul>
  </li>
  <li>값의 해석
    <ul>
      <li>데이터 타입에 따라 다르게 해석한다.(메모리에 저장된 이진수(값)을 문자열? 숫자?)</li>
    </ul>
  </li>
</ol>

<p class="notice--info"><strong>심벌 테이블</strong><br />
컴파일러 또는 인터프리터는 <u>심벌테이블</u>라고 부르는 자료 구조를 통해 식별자를 키로 바인딩된 값의 메모리 주소, 데이터 타입, 스코프 등을 관리한다.</p>

<ul>
  <li><strong>값을 저장할 깨 확보해야 하는 메모리 공간의 크기를 결정.</strong></li>
  <li><strong>값을 참조할 때 한번에 읽어야 할 메모리 공간의 크기를 결정.</strong></li>
  <li><strong>메모리에서 읽어들인 2진수를 어떻게 해석할지 결정.</strong></li>
</ul>

<p><br /></p>

<h1 id="동적-타이핑">동적 타이핑</h1>
<hr />

<p>자바스크립트는 정적 타입 언어와 다르게 변수 선언시 타입을 지정하지 않는다. 대신 <code class="language-plaintext highlighter-rouge">var</code>, <code class="language-plaintext highlighter-rouge">const</code>, <code class="language-plaintext highlighter-rouge">let</code> 키워드를 사용해 변수 선언을 한다.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// c 언어</span>
<span class="kt">char</span> <span class="n">c</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">num</span><span class="p">;</span>
</code></pre></div></div>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// javascript</span>
<span class="kd">var</span> <span class="nx">t1</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">t2</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">t3</span><span class="p">;</span>
</code></pre></div></div>
<p><br /></p>

<ul>
  <li><strong>자바스크립트는 할당된 값에 의해 타입이 결정된다.</strong></li>
  <li><strong>재할당에 의해 타입이 동적으로 변할 수 있다.</strong></li>
  <li>이런 언어를 <strong><u>동적 타입 언어</u></strong>라고 한다.</li>
</ul>

<p>동적타입언어는 개발자의 의도와는 다른 변수타입을 제공할 수 있다. → 동적타입언어는 유연성은 높지만 <u>신뢰성은 떨어진다</u>.</p>

<p><br />
<br /></p>

<p class="notice--info">혹시나 보시다가 고칠 부분이나 마음에 안드시는 부분이 있다면 말씀해주시면 감사하겠습니다!</p>

:ET