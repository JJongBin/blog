I"l<p><br /></p>

<h1 id="1-값">1. 값</h1>
<hr />

<ul>
  <li><strong><u>값</u></strong>은 <u>식(표현식)이 평가되어 생성된 결과</u>를 말한다.</li>
  <li>값은 데이터 타입을 가지고, 메모리에 저장된다.</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 10 + 20이 평가되어 값 30을 생성</span>
<span class="mi">10</span> <span class="o">+</span> <span class="mi">20</span><span class="p">;</span>  <span class="c1">// 30</span>
</code></pre></div></div>

<p><br /></p>

<h1 id="2-리터럴">2. 리터럴</h1>
<hr />

<ul>
  <li><strong><u>리터럴</u></strong>은 <u>사람이 이해할 수 있는 문자 또는 약속된 기호를 사용해 값을 생성하는 표기법.</u></li>
  <li>자바스크립트 엔진은 코드를 실행하는 런타임에 리터럴을 평가해 값을 생성함.</li>
</ul>

<p class="notice--info"><strong>* 리터럴</strong><br />
정수리터럴, 부동소수점리터럴, 2진수리터럴, 문자열리터럴, 불리언리터럴, null리터럴, undefined리터럴, 객체리터럴, 배열리터럴, 함수리터럴, 정규표현식리터럴</p>

<p><br /></p>

<h1 id="3-표현식">3. 표현식</h1>
<hr />

<ul>
  <li><strong><u>표현식</u></strong>은 값으로 평가될 수 있는 문.</li>
  <li>표현식이 평가되면 <u>새로운 값을 생성하거나 기존 값을 참조</u>한다.</li>
  <li>표현식은 값처럼 사용될 수 있다.</li>
</ul>

<p><br /></p>

<h1 id="4-문">4. 문</h1>
<hr />

<ul>
  <li><strong><u>문</u></strong>은 <u>프로그램을 구성하는 기본 단위이자 최소 실행 단위.</u></li>
  <li>문의 집합 → 프로그램  /  문을 작성하고 나열 → 프로그래밍</li>
  <li>
    <p>선언문, 할당문, 조건문, 반복문 등
<br /></p>
  </li>
  <li><strong><u>토큰</u></strong>은 <u>문법적인 의미를 가지고, 문법적으로 더 이상 나눌 수 없는 코드의 기본요소를 의미</u></li>
  <li>문은 여러 토큰으로 구성</li>
  <li>키워드, 식별자, 연산자, 리터럴, 세미콜론, 마침표 등은 문법적인 의미를 가지고 더 이상 나눌 수 없음  →  토큰</li>
</ul>

<p><br /></p>

<h1 id="5-세미콜론과-세미콜론-자동-삽입-기능">5. 세미콜론과 세미콜론 자동 삽입 기능</h1>
<hr />

<p>자바스크립트 엔진은 세미콜론으로 문의 종료 위치를 파악하고 순차적으로 실행한다.</p>

<p><strong>코드블록({…})</strong>은 자체종결성을 가지기 때문에 세미콜론을 붙이지 않는다.</p>

<p class="notice--info"><strong>세미콜론 자동 삽입 기능(ASI)</strong>
자바스크립트 엔진은 소스코드를 해석할때 문의 끝이라고 예측되는 지점에 세미콜론을 자동으로 붙여준다.</p>

<p><br /></p>

<h1 id="6-표현식인-문과-표현식이-아닌-문">6. 표현식인 문과 표현식이 아닌 문</h1>
<hr />

<p><br />
<br /></p>

<p class="notice--info">혹시나 보시다가 고칠 부분이나 마음에 안드시는 부분이 있다면 말씀해주시면 감사하겠습니다!</p>

:ET