I"@<<p><br /></p>

<ul>
  <li>개발자가 의도적으로 값의 타입을 변환하는 것</li>
</ul>
<h3> →**<u>명시적 타입 변환</u>** or **<u>타입 캐스팅</u>**</h3>

<p><code class="language-plaintext highlighter-rouge">parseInt()</code>, <code class="language-plaintext highlighter-rouge">toString()</code> …</p>

<ul>
  <li>개발자의 의도와 상관없이 자바스크립트 엔진에 의해 암묵적으로 타입이 변환 → <strong><u>암묵적 타입 변환</u></strong> or <strong><u>타입 강제 변환</u></strong></li>
</ul>

<p><br /></p>

<h1 id="1-블록문">1. 블록문</h1>
<hr />

<ul>
  <li>블록문은 0개 이상의 문을 중괄호(<code class="language-plaintext highlighter-rouge">{}</code>)로 묶은 것</li>
  <li>자바스크립트는 블록문을 하나의 실행 단위로 취급</li>
  <li>일반적으로 제어문이나 함수를 정의할 때 사용</li>
  <li>블록문은 <strong>자체종결성</strong>을 가지므로 <strong>세미콜론(<code class="language-plaintext highlighter-rouge">;</code>)</strong>을 붙이지 않음</li>
</ul>

<p><br /></p>

<h1 id="2-조건문">2. 조건문</h1>
<hr />

<p>조건문은 주어진 조건식의 평가 결과에 따라 코드 블록(블록문)의 실행을 결정.</p>

<h2 id="if--else-문"><code class="language-plaintext highlighter-rouge">if ... else</code> 문</h2>

<p><code class="language-plaintext highlighter-rouge">if ... else</code>문은 주어진 조건식의 논리적 참, 거짓에 따라 실행 블록 결정.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="p">(</span><span class="nx">조건식</span><span class="p">){</span>
  <span class="c1">// 조건식이 참(true)일때 이 코드 블록 실행</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
  <span class="c1">// 조건식이 거짓(false)일때 이 코드 블록 실행</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br />
조건문을 여러개 만들 수 있는데 <code class="language-plaintext highlighter-rouge">else if</code>를 사용하면 된다</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="p">(</span><span class="nx">조건식1</span><span class="p">){</span>
  <span class="c1">// 조건식1 참(true)일때 이 코드 블록 실행</span>
<span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">조건식2</span><span class="p">)</span> <span class="p">{</span>
  <span class="c1">// 조건식2 참(true)일때 이 코드 블록 실행</span>
<span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">조건식3</span><span class="p">){</span>
  <span class="c1">// 조건식3 참(true)일때 이 코드 블록 실행</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
  <span class="c1">// 모든 조건식이 거짓(false)일때 이 코드 블록 실행</span>
<span class="p">}</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">if ... else</code>문은 위에서 순서대로 진행된다 (범위를 조건으로 했을때 주의)</p>

<p>대부분의 <code class="language-plaintext highlighter-rouge">if ... else</code>문은 <strong><u>삼항 조건 연산자</u></strong>로 표현할 수 있다</p>

<h2 id="switch-문"><code class="language-plaintext highlighter-rouge">switch</code> 문</h2>

<p><code class="language-plaintext highlighter-rouge">switch</code>문은 주어진 표현식을 평가하여 그 값과 일치하는 표현식을 같는 <code class="language-plaintext highlighter-rouge">case</code>문으로 실행 흐름을 옮김.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">switch</span> <span class="p">(</span><span class="nx">표현식</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">case</span> <span class="nx">표현식1</span><span class="p">:</span> <span class="nx">표현식과</span> <span class="nx">표현식1이</span> <span class="nx">일치하면</span> <span class="nx">실행</span><span class="p">;</span>
    <span class="nx">braek</span><span class="p">;</span>
  <span class="k">case</span> <span class="nx">표현식2</span><span class="p">:</span> <span class="nx">표현식과</span> <span class="nx">표현식2가</span> <span class="nx">일치하면</span> <span class="nx">실행</span><span class="p">;</span>
    <span class="nx">braek</span><span class="p">;</span>
  <span class="k">case</span> <span class="nx">표현식3</span><span class="p">:</span> <span class="nx">표현식과</span> <span class="nx">표현식3이</span> <span class="nx">일치하면</span> <span class="nx">실행</span><span class="p">;</span>
    <span class="nx">braek</span><span class="p">;</span>
  <span class="nl">default</span><span class="p">:</span> <span class="nx">아무것도</span> <span class="nx">일치하지</span> <span class="nx">않을때</span> <span class="nx">실행</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><code class="language-plaintext highlighter-rouge">switch</code>문의 <code class="language-plaintext highlighter-rouge">case</code>를 보면 <code class="language-plaintext highlighter-rouge">break</code>가 포함되어 있는데 코드 블록을 출하는 역할을 함.</p>

<p><u>`braek`를 사용하지 않으면 `default`가 실행된다.</u></p>

<p class="notice--info"><strong>* 폴스루(fall through)</strong><br />
<code class="language-plaintext highlighter-rouge">switch</code>문에서 의도적으로 <code class="language-plaintext highlighter-rouge">break</code>를 생략하여 여러 조건을 동일하게 사용한다.</p>

<p><br /></p>

<h1 id="3-반복문">3. 반복문</h1>
<hr />

<p>반복문은 조건식의 평가 결과가 참인 경우 코드 블록을 반복해서 실행(거짓일 때까지 반복).</p>

<p><br /></p>

<p><strong>&lt; 자바스크립트의 반복문 대체 &gt;</strong></p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">forEach</code> : 배열을 순회</li>
  <li><code class="language-plaintext highlighter-rouge">for...in</code> : 객체의 프로퍼티를 열거</li>
  <li><code class="language-plaintext highlighter-rouge">for...of</code> : 반복문 대체 [ES6]</li>
</ul>

<h2 id="for-문"><code class="language-plaintext highlighter-rouge">for</code> 문</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="p">(</span><span class="nx">변수선언</span> <span class="nx">및</span> <span class="nx">할당</span><span class="p">;</span> <span class="nx">조건식</span><span class="p">;</span> <span class="nx">증감식</span><span class="p">){</span>
  <span class="c1">// 조건식이 참인 경우 반복해서 실행 (조건식이 거짓일 때까지)</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 1부터 10까지 출력</span>
<span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span><span class="o">&lt;=</span><span class="mi">10</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">){</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>
<p>위 코드를 순서대로 살펴보면,</p>
<ol>
  <li>  i는 <code class="language-plaintext highlighter-rouge">let</code>키워드를 사용해서 선언 및 1을 할당했고,</li>
  <li>  <code class="language-plaintext highlighter-rouge">i&lt;=10</code>이 조건식으로 있고 현재 i는 1이므로 <code class="language-plaintext highlighter-rouge">true</code> → <u>코드블록 실행</u></li>
  <li>  i를 출력 → 1 출력</li>
  <li>  증감식으로 <code class="language-plaintext highlighter-rouge">i++</code>, 코드블록 실행 이후 i가 1증가하고,</li>
  <li>  이후 조건식의 <code class="language-plaintext highlighter-rouge">true</code>, <code class="language-plaintext highlighter-rouge">false</code> 여부판단 → 코드블록 실행(조건식이 <code class="language-plaintext highlighter-rouge">false</code>일 때까지)</li>
</ol>

<p><br /></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 무한루프</span>
<span class="k">for</span> <span class="p">(;;){</span>
  <span class="c1">// 코드실행</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">for</code>문의 무한루프는 이렇게 사용이 가능.</li>
  <li><code class="language-plaintext highlighter-rouge">for</code>문은 중첩할 수 있다.</li>
</ul>

<p><br /></p>

<h2 id="while--문"><code class="language-plaintext highlighter-rouge">while </code> 문</h2>

<p><code class="language-plaintext highlighter-rouge">while</code>문은 주어진 조건식의 평가 결과가 참(<code class="language-plaintext highlighter-rouge">false</code>)이면 코드블록을 계속해서 반복 실행.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">while</span><span class="p">(</span><span class="nx">조건식</span><span class="p">){</span>
  <span class="c1">// 조건식이 참(true)이면 코드 반복 실행</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 1부터 9까지 출력</span>
<span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="k">while</span><span class="p">(</span><span class="nx">i</span><span class="o">&lt;</span><span class="mi">10</span><span class="p">){</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
  <span class="nx">i</span><span class="o">++</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p>예시) 1 ~ 9 출력</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 무한루프</span>
<span class="k">while</span><span class="p">(</span><span class="kc">true</span><span class="p">){</span>
  <span class="c1">// 코드 실행</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<h2 id="dowhile-문"><code class="language-plaintext highlighter-rouge">do...while</code> 문</h2>

<p><code class="language-plaintext highlighter-rouge">do...while</code>문은 코드블록을 먼저 실행하고 조건식을 평가 → 무조건 한번은 실행</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">do</span><span class="p">{</span>
  <span class="c1">// 코드 실행</span>
<span class="p">}</span> <span class="k">while</span><span class="p">(</span><span class="nx">조건문</span><span class="p">)</span>
</code></pre></div></div>

<p><br /></p>

<h1 id="5-break-문">5. <code class="language-plaintext highlighter-rouge">break</code> 문</h1>
<hr />
<p><code class="language-plaintext highlighter-rouge">break</code>문은 코드 블록을 탈출하는데 <strong>레이블문, 반복문, <code class="language-plaintext highlighter-rouge">switch</code>문</strong>을 탈출한다<br />
 →   <u>이외 코드블록에서는 **SyntaxError(문법에러) 발생**</u></p>

<p class="notice--info">레이블문 : 식별자가 붙은 문을 말함</p>

<p>내부 코드블록이 아닌 외부 코드 블록을 탈출하려고 할때 식별자를 붙이고 <code class="language-plaintext highlighter-rouge">braek</code>에 식별자를 명시.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">outer</span><span class="p">:</span> <span class="k">for</span> <span class="p">(;;){</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span><span class="o">&lt;</span><span class="mi">100</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">i</span> <span class="o">===</span> <span class="mi">50</span><span class="p">){</span>
      <span class="k">break</span> <span class="nx">outer</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<p>i가 50 일때 외부코드블록을 탈출시킨다.</p>

<p><br /></p>

<h1 id="6-continue-문">6. <code class="language-plaintext highlighter-rouge">continue</code> 문</h1>
<hr />
<p><code class="language-plaintext highlighter-rouge">continue</code>문은 반복문의 코드 블록 실행을 건너뛰고 진행한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span><span class="o">&lt;</span><span class="mi">10</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">i</span> <span class="o">===</span> <span class="mi">5</span><span class="p">){</span>
    <span class="k">continue</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>
<p>i가 5일때 <code class="language-plaintext highlighter-rouge">continue</code>가 있는 해당 지점부터 코드블록을 건너뛰고 i가 6일때로 진행된다.</p>

<p><br />
<br /></p>

<p class="notice--info">이웅모 선생님의 모던 자바스크립트 Deep Dive를 공부하기 위해 정리한 글입니다.<br />
혹시나 보시다가 고칠 부분이나 마음에 안드시는 부분이 있다면 말씀해주시면 감사하겠습니다!</p>

:ET